<?xml version="1.0"?>
<doc>
    <assembly>
        <name>mscorlib.Polyfill.NET40</name>
    </assembly>
    <members>
        <member name="T:System.Resources.Strings">
            <summary>
              一个强类型的资源类，用于查找本地化的字符串等。
            </summary>
        </member>
        <member name="P:System.Resources.Strings.ResourceManager">
            <summary>
              返回此类使用的缓存的 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:System.Resources.Strings.Culture">
            <summary>
              重写当前线程的 CurrentUICulture 属性，对
              使用此强类型资源类的所有资源查找执行重写。
            </summary>
        </member>
        <member name="P:System.Resources.Strings.Arg_EnumIllegalVal">
            <summary>
              查找类似 Illegal enum value: {0}. 的本地化字符串。
            </summary>
        </member>
        <member name="P:System.Resources.Strings.Argument_EmptyValue">
            <summary>
              查找类似 Value cannot be empty. 的本地化字符串。
            </summary>
        </member>
        <member name="P:System.Resources.Strings.ArgumentNull_Generic">
            <summary>
              查找类似 Value cannot be null. 的本地化字符串。
            </summary>
        </member>
        <member name="P:System.Resources.Strings.ArgumentOutOfRange_NeedNonNegOrNegative1">
            <summary>
              查找类似 Number must be either non-negative and less than or equal to Int32.MaxValue or -1. 的本地化字符串。
            </summary>
        </member>
        <member name="P:System.Resources.Strings.IO_AlreadyExists_Name">
            <summary>
              查找类似 Cannot create &apos;{0}&apos; because a file or directory with the same name already exists. 的本地化字符串。
            </summary>
        </member>
        <member name="P:System.Resources.Strings.IO_FileExists_Name">
            <summary>
              查找类似 The file &apos;{0}&apos; already exists. 的本地化字符串。
            </summary>
        </member>
        <member name="P:System.Resources.Strings.IO_FileNotFound">
            <summary>
              查找类似 Unable to find the specified file. 的本地化字符串。
            </summary>
        </member>
        <member name="P:System.Resources.Strings.IO_FileNotFound_FileName">
            <summary>
              查找类似 Could not find file &apos;{0}&apos;. 的本地化字符串。
            </summary>
        </member>
        <member name="P:System.Resources.Strings.IO_PathNotFound_NoPathName">
            <summary>
              查找类似 Could not find a part of the path. 的本地化字符串。
            </summary>
        </member>
        <member name="P:System.Resources.Strings.IO_PathNotFound_Path">
            <summary>
              查找类似 Could not find a part of the path &apos;{0}&apos;. 的本地化字符串。
            </summary>
        </member>
        <member name="P:System.Resources.Strings.IO_PathTooLong">
            <summary>
              查找类似 The specified file name or path is too long, or a component of the specified path is too long. 的本地化字符串。
            </summary>
        </member>
        <member name="P:System.Resources.Strings.IO_PathTooLong_Path">
            <summary>
              查找类似 The path &apos;{0}&apos; is too long, or a component of the specified path is too long. 的本地化字符串。
            </summary>
        </member>
        <member name="P:System.Resources.Strings.IO_SharingViolation_File">
            <summary>
              查找类似 The process cannot access the file &apos;{0}&apos; because it is being used by another process. 的本地化字符串。
            </summary>
        </member>
        <member name="P:System.Resources.Strings.IO_SharingViolation_NoFileName">
            <summary>
              查找类似 The process cannot access the file because it is being used by another process. 的本地化字符串。
            </summary>
        </member>
        <member name="P:System.Resources.Strings.net_sockets_invalid_optionValue_all">
            <summary>
              查找类似 The specified value is not valid. 的本地化字符串。
            </summary>
        </member>
        <member name="P:System.Resources.Strings.SpinWait_SpinUntil_ArgumentNull">
            <summary>
              查找类似 The condition argument is null. 的本地化字符串。
            </summary>
        </member>
        <member name="P:System.Resources.Strings.SpinWait_SpinUntil_TimeoutWrong">
            <summary>
              查找类似 The timeout must represent a value between -1 and Int32.MaxValue, inclusive. 的本地化字符串。
            </summary>
        </member>
        <member name="P:System.Resources.Strings.UnauthorizedAccess_IODenied_NoPathName">
            <summary>
              查找类似 Access to the path is denied. 的本地化字符串。
            </summary>
        </member>
        <member name="P:System.Resources.Strings.UnauthorizedAccess_IODenied_Path">
            <summary>
              查找类似 Access to the path &apos;{0}&apos; is denied. 的本地化字符串。
            </summary>
        </member>
        <member name="P:System.EnvironmentEx.IsSingleProcessor">
            <summary>
            Gets whether the current machine has only a single processor.
            </summary>
        </member>
        <member name="M:System.OperatingSystemEx.IsOSPlatform(System.String)">
            <summary>
            Indicates whether the current application is running on the specified platform.
            </summary>
            <param name="platform">Case-insensitive platform name. Examples: Browser, Linux, FreeBSD, Android, iOS, macOS, tvOS, watchOS, Windows.</param>
        </member>
        <member name="M:System.OperatingSystemEx.IsOSPlatformVersionAtLeast(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Check for the OS with a >= version comparison. Used to guard APIs that were added in the given OS release.
            </summary>
            <param name="platform">Case-insensitive platform name. Examples: Browser, Linux, FreeBSD, Android, iOS, macOS, tvOS, watchOS, Windows.</param>
            <param name="major">Major OS version number.</param>
            <param name="minor">Minor OS version number (optional).</param>
            <param name="build">Build OS version number (optional).</param>
            <param name="revision">Revision OS version number (optional).</param>
        </member>
        <member name="M:System.OperatingSystemEx.IsBrowser">
            <summary>
            Indicates whether the current application is running as WASM in a Browser.
            </summary>
        </member>
        <member name="M:System.OperatingSystemEx.IsLinux">
            <summary>
            Indicates whether the current application is running on Linux.
            </summary>
        </member>
        <member name="M:System.OperatingSystemEx.IsFreeBSD">
            <summary>
            Indicates whether the current application is running on FreeBSD.
            </summary>
        </member>
        <member name="M:System.OperatingSystemEx.IsFreeBSDVersionAtLeast(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Check for the FreeBSD version (returned by 'uname') with a >= version comparison. Used to guard APIs that were added in the given FreeBSD release.
            </summary>
        </member>
        <member name="M:System.OperatingSystemEx.IsAndroid">
            <summary>
            Indicates whether the current application is running on Android.
            </summary>
        </member>
        <member name="M:System.OperatingSystemEx.IsAndroidVersionAtLeast(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Check for the Android API level (returned by 'ro.build.version.sdk') with a >= version comparison. Used to guard APIs that were added in the given Android release.
            </summary>
        </member>
        <member name="M:System.OperatingSystemEx.IsIOS">
            <summary>
            Indicates whether the current application is running on iOS or MacCatalyst.
            </summary>
        </member>
        <member name="M:System.OperatingSystemEx.IsIOSVersionAtLeast(System.Int32,System.Int32,System.Int32)">
            <summary>
            Check for the iOS/MacCatalyst version (returned by 'libobjc.get_operatingSystemVersion') with a >= version comparison. Used to guard APIs that were added in the given iOS release.
            </summary>
        </member>
        <member name="M:System.OperatingSystemEx.IsMacOS">
            <summary>
            Indicates whether the current application is running on macOS.
            </summary>
        </member>
        <member name="M:System.OperatingSystemEx.IsMacOSVersionAtLeast(System.Int32,System.Int32,System.Int32)">
            <summary>
            Check for the macOS version (returned by 'libobjc.get_operatingSystemVersion') with a >= version comparison. Used to guard APIs that were added in the given macOS release.
            </summary>
        </member>
        <member name="M:System.OperatingSystemEx.IsMacCatalyst">
            <summary>
            Indicates whether the current application is running on Mac Catalyst.
            </summary>
        </member>
        <member name="M:System.OperatingSystemEx.IsMacCatalystVersionAtLeast(System.Int32,System.Int32,System.Int32)">
            <summary>
            Check for the Mac Catalyst version (iOS version as presented in Apple documentation) with a >= version comparison. Used to guard APIs that were added in the given Mac Catalyst release.
            </summary>
        </member>
        <member name="M:System.OperatingSystemEx.IsTvOS">
            <summary>
            Indicates whether the current application is running on tvOS.
            </summary>
        </member>
        <member name="M:System.OperatingSystemEx.IsTvOSVersionAtLeast(System.Int32,System.Int32,System.Int32)">
            <summary>
            Check for the tvOS version (returned by 'libobjc.get_operatingSystemVersion') with a >= version comparison. Used to guard APIs that were added in the given tvOS release.
            </summary>
        </member>
        <member name="M:System.OperatingSystemEx.IsWatchOS">
            <summary>
            Indicates whether the current application is running on watchOS.
            </summary>
        </member>
        <member name="M:System.OperatingSystemEx.IsWatchOSVersionAtLeast(System.Int32,System.Int32,System.Int32)">
            <summary>
            Check for the watchOS version (returned by 'libobjc.get_operatingSystemVersion') with a >= version comparison. Used to guard APIs that were added in the given watchOS release.
            </summary>
        </member>
        <member name="M:System.OperatingSystemEx.IsWindows">
            <summary>
            Indicates whether the current application is running on Windows.
            </summary>
        </member>
        <member name="M:System.OperatingSystemEx.IsWindowsVersionAtLeast(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Check for the Windows version (returned by 'RtlGetVersion') with a >= version comparison. Used to guard APIs that were added in the given Windows release.
            </summary>
        </member>
        <member name="T:System.Threading.Volatile">
            <summary>
            Contains methods for performing volatile memory operations.
            </summary>
        </member>
        <member name="M:System.Threading.Volatile.Read(System.Boolean@)">
            <summary>
            Reads the value of the specified field. On systems that require it, inserts a memory barrier
            that prevents the processor from reordering memory operations as follows: If a read or write
            appears after this method in the code, the processor cannot move it before this method.
            </summary>
            <param name="location">The field to read.</param>
            <returns>The value that was read. This value is the latest written by any processor in
            the computer, regardless of the number of processors or the state of processor cache.</returns>
        </member>
        <member name="M:System.Threading.Volatile.Read(System.Byte@)">
            <summary>
            Reads the value of the specified field. On systems that require it, inserts a memory barrier
            that prevents the processor from reordering memory operations as follows: If a read or write
            appears after this method in the code, the processor cannot move it before this method.
            </summary>
            <param name="location">The field to read.</param>
            <returns>The value that was read. This value is the latest written by any processor in
            the computer, regardless of the number of processors or the state of processor cache.</returns>
        </member>
        <member name="M:System.Threading.Volatile.Read(System.Double@)">
            <summary>
            Reads the value of the specified field. On systems that require it, inserts a memory barrier
            that prevents the processor from reordering memory operations as follows: If a read or write
            appears after this method in the code, the processor cannot move it before this method.
            </summary>
            <param name="location">The field to read.</param>
            <returns>The value that was read. This value is the latest written by any processor in
            the computer, regardless of the number of processors or the state of processor cache.</returns>
        </member>
        <member name="M:System.Threading.Volatile.Read(System.Int16@)">
            <summary>
            Reads the value of the specified field. On systems that require it, inserts a memory barrier
            that prevents the processor from reordering memory operations as follows: If a read or write
            appears after this method in the code, the processor cannot move it before this method.
            </summary>
            <param name="location">The field to read.</param>
            <returns>The value that was read. This value is the latest written by any processor in
            the computer, regardless of the number of processors or the state of processor cache.</returns>
        </member>
        <member name="M:System.Threading.Volatile.Read(System.Int32@)">
            <summary>
            Reads the value of the specified field. On systems that require it, inserts a memory barrier
            that prevents the processor from reordering memory operations as follows: If a read or write
            appears after this method in the code, the processor cannot move it before this method.
            </summary>
            <param name="location">The field to read.</param>
            <returns>The value that was read. This value is the latest written by any processor in
            the computer, regardless of the number of processors or the state of processor cache.</returns>
        </member>
        <member name="M:System.Threading.Volatile.Read(System.Int64@)">
            <summary>
            Reads the value of the specified field. On systems that require it, inserts a memory barrier
            that prevents the processor from reordering memory operations as follows: If a read or write
            appears after this method in the code, the processor cannot move it before this method.
            </summary>
            <param name="location">The field to read.</param>
            <returns>The value that was read. This value is the latest written by any processor in
            the computer, regardless of the number of processors or the state of processor cache.</returns>
        </member>
        <member name="M:System.Threading.Volatile.Read(System.IntPtr@)">
            <summary>
            Reads the value of the specified field. On systems that require it, inserts a memory barrier
            that prevents the processor from reordering memory operations as follows: If a read or write
            appears after this method in the code, the processor cannot move it before this method.
            </summary>
            <param name="location">The field to read.</param>
            <returns>The value that was read. This value is the latest written by any processor in
            the computer, regardless of the number of processors or the state of processor cache.</returns>
        </member>
        <member name="M:System.Threading.Volatile.Read(System.SByte@)">
            <summary>
            Reads the value of the specified field. On systems that require it, inserts a memory barrier
            that prevents the processor from reordering memory operations as follows: If a read or write
            appears after this method in the code, the processor cannot move it before this method.
            </summary>
            <param name="location">The field to read.</param>
            <returns>The value that was read. This value is the latest written by any processor in
            the computer, regardless of the number of processors or the state of processor cache.</returns>
        </member>
        <member name="M:System.Threading.Volatile.Read(System.Single@)">
            <summary>
            Reads the value of the specified field. On systems that require it, inserts a memory barrier
            that prevents the processor from reordering memory operations as follows: If a read or write
            appears after this method in the code, the processor cannot move it before this method.
            </summary>
            <param name="location">The field to read.</param>
            <returns>The value that was read. This value is the latest written by any processor in
            the computer, regardless of the number of processors or the state of processor cache.</returns>
        </member>
        <member name="M:System.Threading.Volatile.Read(System.UInt16@)">
            <summary>
            Reads the value of the specified field. On systems that require it, inserts a memory barrier
            that prevents the processor from reordering memory operations as follows: If a read or write
            appears after this method in the code, the processor cannot move it before this method.
            </summary>
            <param name="location">The field to read.</param>
            <returns>The value that was read. This value is the latest written by any processor in
            the computer, regardless of the number of processors or the state of processor cache.</returns>
        </member>
        <member name="M:System.Threading.Volatile.Read(System.UInt32@)">
            <summary>
            Reads the value of the specified field. On systems that require it, inserts a memory barrier
            that prevents the processor from reordering memory operations as follows: If a read or write
            appears after this method in the code, the processor cannot move it before this method.
            </summary>
            <param name="location">The field to read.</param>
            <returns>The value that was read. This value is the latest written by any processor in
            the computer, regardless of the number of processors or the state of processor cache.</returns>
        </member>
        <member name="M:System.Threading.Volatile.Read(System.UInt64@)">
            <summary>
            Reads the value of the specified field. On systems that require it, inserts a memory barrier
            that prevents the processor from reordering memory operations as follows: If a read or write
            appears after this method in the code, the processor cannot move it before this method.
            </summary>
            <param name="location">The field to read.</param>
            <returns>The value that was read. This value is the latest written by any processor in
            the computer, regardless of the number of processors or the state of processor cache.</returns>
        </member>
        <member name="M:System.Threading.Volatile.Read(System.UIntPtr@)">
            <summary>
            Reads the value of the specified field. On systems that require it, inserts a memory barrier
            that prevents the processor from reordering memory operations as follows: If a read or write
            appears after this method in the code, the processor cannot move it before this method.
            </summary>
            <param name="location">The field to read.</param>
            <returns>The value that was read. This value is the latest written by any processor in
            the computer, regardless of the number of processors or the state of processor cache.</returns>
        </member>
        <member name="M:System.Threading.Volatile.Read``1(``0@)">
            <summary>
            Reads the object reference from the specified field. On systems that require it, inserts a memory
            barrier that prevents the processor from reordering memory operations as follows: If a read
            or write appears after this method in the code, the processor cannot move it before this method.
            </summary>
            <param name="location">The field to read.</param>
            <typeparam name="T">The type of field to read. This must be a reference type, not a value type.</typeparam>
            <returns>The reference to <typeparamref name="T"/> that was read. This reference is the latest
            written by any processor in the computer, regardless of the number of processors or the state of
            processor cache.</returns>
        </member>
        <member name="M:System.Threading.Volatile.Write(System.Boolean@,System.Boolean)">
            <summary>
            Writes the specified value to the specified field. On systems that require it, inserts a memory
            barrier that prevents the processor from reordering memory operations as follows: If a read or
            write appears before this method in the code, the processor cannot move it after this method.
            </summary>
            <param name="location">The field where the value is written.</param>
            <param name="value">The value to write. The value is written immediately so that it is visible
            to all processors in the computer.</param>
        </member>
        <member name="M:System.Threading.Volatile.Write(System.Byte@,System.Byte)">
            <summary>
            Writes the specified value to the specified field. On systems that require it, inserts a memory
            barrier that prevents the processor from reordering memory operations as follows: If a read or
            write appears before this method in the code, the processor cannot move it after this method.
            </summary>
            <param name="location">The field where the value is written.</param>
            <param name="value">The value to write. The value is written immediately so that it is visible
            to all processors in the computer.</param>
        </member>
        <member name="M:System.Threading.Volatile.Write(System.Double@,System.Double)">
            <summary>
            Writes the specified value to the specified field. On systems that require it, inserts a memory
            barrier that prevents the processor from reordering memory operations as follows: If a read or
            write appears before this method in the code, the processor cannot move it after this method.
            </summary>
            <param name="location">The field where the value is written.</param>
            <param name="value">The value to write. The value is written immediately so that it is visible
            to all processors in the computer.</param>
        </member>
        <member name="M:System.Threading.Volatile.Write(System.Int16@,System.Int16)">
            <summary>
            Writes the specified value to the specified field. On systems that require it, inserts a memory
            barrier that prevents the processor from reordering memory operations as follows: If a read or
            write appears before this method in the code, the processor cannot move it after this method.
            </summary>
            <param name="location">The field where the value is written.</param>
            <param name="value">The value to write. The value is written immediately so that it is visible
            to all processors in the computer.</param>
        </member>
        <member name="M:System.Threading.Volatile.Write(System.Int32@,System.Int32)">
            <summary>
            Writes the specified value to the specified field. On systems that require it, inserts a memory
            barrier that prevents the processor from reordering memory operations as follows: If a read or
            write appears before this method in the code, the processor cannot move it after this method.
            </summary>
            <param name="location">The field where the value is written.</param>
            <param name="value">The value to write. The value is written immediately so that it is visible
            to all processors in the computer.</param>
        </member>
        <member name="M:System.Threading.Volatile.Write(System.Int64@,System.Int64)">
            <summary>
            Writes the specified value to the specified field. On systems that require it, inserts a memory
            barrier that prevents the processor from reordering memory operations as follows: If a memory
            operation appears before this method in the code, the processor cannot move it after this method.
            </summary>
            <param name="location">The field where the value is written.</param>
            <param name="value">The value to write. The value is written immediately so that it is visible
            to all processors in the computer.</param>
        </member>
        <member name="M:System.Threading.Volatile.Write(System.IntPtr@,System.IntPtr)">
            <summary>
            Writes the specified value to the specified field. On systems that require it, inserts a memory
            barrier that prevents the processor from reordering memory operations as follows: If a read or
            write appears before this method in the code, the processor cannot move it after this method.
            </summary>
            <param name="location">The field where the value is written.</param>
            <param name="value">The value to write. The value is written immediately so that it is visible
            to all processors in the computer.</param>
        </member>
        <member name="M:System.Threading.Volatile.Write(System.SByte@,System.SByte)">
            <summary>
            Writes the specified value to the specified field. On systems that require it, inserts a memory
            barrier that prevents the processor from reordering memory operations as follows: If a read or
            write appears before this method in the code, the processor cannot move it after this method.
            </summary>
            <param name="location">The field where the value is written.</param>
            <param name="value">The value to write. The value is written immediately so that it is visible
            to all processors in the computer.</param>
        </member>
        <member name="M:System.Threading.Volatile.Write(System.Single@,System.Single)">
            <summary>
            Writes the specified value to the specified field. On systems that require it, inserts a memory
            barrier that prevents the processor from reordering memory operations as follows: If a read or
            write appears before this method in the code, the processor cannot move it after this method.
            </summary>
            <param name="location">The field where the value is written.</param>
            <param name="value">The value to write. The value is written immediately so that it is visible
            to all processors in the computer.</param>
        </member>
        <member name="M:System.Threading.Volatile.Write(System.UInt16@,System.UInt16)">
            <summary>
            Writes the specified value to the specified field. On systems that require it, inserts a memory
            barrier that prevents the processor from reordering memory operations as follows: If a read or
            write appears before this method in the code, the processor cannot move it after this method.
            </summary>
            <param name="location">The field where the value is written.</param>
            <param name="value">The value to write. The value is written immediately so that it is visible
            to all processors in the computer.</param>
        </member>
        <member name="M:System.Threading.Volatile.Write(System.UInt32@,System.UInt32)">
            <summary>
            Writes the specified value to the specified field. On systems that require it, inserts a memory
            barrier that prevents the processor from reordering memory operations as follows: If a read or
            write appears before this method in the code, the processor cannot move it after this method.
            </summary>
            <param name="location">The field where the value is written.</param>
            <param name="value">The value to write. The value is written immediately so that it is visible
            to all processors in the computer.</param>
        </member>
        <member name="M:System.Threading.Volatile.Write(System.UInt64@,System.UInt64)">
            <summary>
            Writes the specified value to the specified field. On systems that require it, inserts a memory
            barrier that prevents the processor from reordering memory operations as follows: If a read or
            write appears before this method in the code, the processor cannot move it after this method.
            </summary>
            <param name="location">The field where the value is written.</param>
            <param name="value">The value to write. The value is written immediately so that it is visible
            to all processors in the computer.</param>
        </member>
        <member name="M:System.Threading.Volatile.Write(System.UIntPtr@,System.UIntPtr)">
            <summary>
            Writes the specified value to the specified field. On systems that require it, inserts a memory
            barrier that prevents the processor from reordering memory operations as follows: If a read or
            write appears before this method in the code, the processor cannot move it after this method.
            </summary>
            <param name="location">The field where the value is written.</param>
            <param name="value">The value to write. The value is written immediately so that it is visible
            to all processors in the computer.</param>
        </member>
        <member name="M:System.Threading.Volatile.Write``1(``0@,``0)">
            <summary>
            Writes the specified object reference to the specified field. On systems that require it, inserts
            a memory barrier that prevents the processor from reordering memory operations as follows: If a
            read or write appears before this method in the code, the processor cannot move it after this method.
            </summary>
            <param name="location">The field where the object reference is written.</param>
            <param name="value">The object reference to write. The reference is written immediately so that it
            is visible to all processors in the computer.</param>
            <typeparam name="T">The type of field to write. This must be a reference type, not a value type.</typeparam>
        </member>
    </members>
</doc>
